{"version":3,"sources":["RegisterForm/Form.js","RegisterForm/EducationalInfo.js","RegisterForm/PersonalInfo.js","RegisterForm/AdditionalInfo.js","RegisterForm/FormComplete.js","RegisterForm/index.js","App.js","serviceWorker.js","index.js"],"names":["Form","createContext","props","useState","user","username","email","password","confirmPassword","birthdate","Date","toISOString","slice","bio","website","acceptTerms","newsletter","errors","state","setState","Provider","value","children","useContext","Grid","container","spacing","item","xs","TextField","id","label","name","placeholder","variant","margin","multiline","InputLabelProps","shrink","inputProps","maxLength","fullWidth","rows","type","helperText","dateLimit","setFullYear","getFullYear","required","minLength","error","defaultValue","min","max","isWidthDown","lg","useStyles","makeStyles","theme","Additional Info","padding","border","marginBottom","classes","className","Typography","FormControlLabel","control","Checkbox","checked","color","root","textAlign","title","Button","onClick","window","location","reload","breakpoints","up","center","content","buttonsContainer","button","marginRight","backgroundColor","palette","dark","message","display","alignItems","icon","steps","React","completed","setCompleted","activeStep","setActiveStep","open","setOpen","handleBack","prevActiveStep","handleSubmit","e","preventDefault","length","handleError","target","validationMessage","handleChange","setCustomValidity","confirm","form","querySelector","validity","valid","Box","Stepper","orientation","map","index","labelProps","optional","Step","key","StepLabel","StepContent","onSubmit","onInvalid","onChange","step","PersonalInfo","EducationalInfo","AdditionalInfo","getStepContent","disabled","Snackbar","anchorOrigin","vertical","horizontal","resumeHideDuration","autoHideDuration","onClose","SnackbarContent","FormComplete","minHeight","alignContent","down","header","flexDirection","justifyContent","primary","main","flexGrow","contrastText","subtitle","light","toolbar","App","md","RegisterForm","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51203f4e.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nexport const Form = createContext([{}, () => {}]);\r\n\r\nexport default props => {\r\n  const [state, setState] = useState({\r\n    user: {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      birthdate: new Date().toISOString().slice(0, 10),\r\n      bio: \"\",\r\n      website: \"\",\r\n      acceptTerms: false,\r\n      newsletter: false\r\n    },\r\n    errors: {}\r\n  });\r\n  return (\r\n    <Form.Provider value={[state, setState]}>\r\n      {props.children}\r\n    </Form.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Form } from \"./Form\";\r\n\r\n//GENERAL\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\n\r\n//USER PREFERENCES\r\nexport default props => {\r\n  const [state] = useContext(Form);\r\n  const { user } = state;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          id='bio'\r\n          label='Bio'\r\n          value={user.bio}\r\n          name='bio'\r\n          placeholder='Type few words about you'\r\n          variant='outlined'\r\n          margin='normal'\r\n          multiline\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          inputProps={{\r\n            maxLength: 200\r\n          }}\r\n          fullWidth\r\n          rows={3}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          id='website'\r\n          label='Website'\r\n          name='website'\r\n          type='url'\r\n          value={user.website}\r\n          placeholder='Type URL address of your website'\r\n          helperText='URL address should start with http://... or https://...'\r\n          variant='outlined'\r\n          margin='normal'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n//GENERAL\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport { isWidthDown } from \"@material-ui/core/withWidth\";\r\n//CONTEXT\r\nimport { Form } from \"./Form\";\r\n\r\nexport default props => {\r\n  const [state] = useContext(Form);\r\n  const { user, errors } = state;\r\n  const dateLimit = new Date();\r\n  dateLimit.setFullYear(dateLimit.getFullYear() - 18);\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          placeholder='Type your username here'\r\n          name='username'\r\n          label='Username'\r\n          value={user.username}\r\n          variant='outlined'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          required\r\n          inputProps={{\r\n            minLength: 3,\r\n            maxLength: 20\r\n          }}\r\n          error={!!errors[\"username\"]}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          placeholder='Type your email here'\r\n          name='email'\r\n          label='Email'\r\n          value={user.email}\r\n          type='email'\r\n          variant='outlined'\r\n          margin='normal'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          error={!!errors[\"email\"]}\r\n          required\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          type='date'\r\n          name='birthdate'\r\n          id='birthdate'\r\n          label='Birthdate'\r\n          defaultValue={user.birthdate}\r\n          helperText='You need to be at least 18 years old'\r\n          variant='outlined'\r\n          margin='normal'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          inputProps={{\r\n            min: \"1920-01-01\",\r\n            max: dateLimit.toISOString().slice(0, 10)\r\n          }}\r\n          error={!!errors[\"birthdate\"]}\r\n          required\r\n          fullWidth={isWidthDown(\"sm\")}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} lg={6}>\r\n        <TextField\r\n          placeholder='Type your password here'\r\n          name='password'\r\n          label='Password'\r\n          value={user.password}\r\n          type='password'\r\n          variant='outlined'\r\n          margin='normal'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          required\r\n          error={!!errors[\"password\"]}\r\n          inputProps={{\r\n            minLength: 6,\r\n            maxLength: 20\r\n          }}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} lg={6}>\r\n        <TextField\r\n          placeholder='Re-type your password here'\r\n          label='Password'\r\n          name='confirmPassword'\r\n          value={user.confirmPassword}\r\n          type='password'\r\n          variant='outlined'\r\n          margin='normal'\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          error={!!errors[\"confirmPassword\"]}\r\n          inputProps={{\r\n            minLength: 6,\r\n            maxLength: 20\r\n          }}\r\n          required\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Form } from \"./Form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//GENERAL\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  Additional Info: {\r\n    padding: theme.spacing(3),\r\n    border: \"1px solid #ddd\",\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n// Additional Info COMPONENT\r\nexport default props => {\r\n  const classes = useStyles();\r\n  const [state] = useContext(Form);\r\n  const { username, email, birthdate, bio, website } = state.user;\r\n  return (\r\n    <Fragment>\r\n      <Grid container className={classes.Additional Info}>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h4'>Additional Info</Typography>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Typography variant='h6'>Username</Typography>\r\n          <Typography variant='body2'>{username}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h6'>Email</Typography>\r\n          <Typography variant='body2'>{email}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h6'>Birthdate</Typography>\r\n          <Typography variant='body2'>{birthdate}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h6'>Bio</Typography>\r\n          <Typography variant='body2'>{bio || \"-\"}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h6'>Website</Typography>\r\n          <Typography variant='body2'>{website || \"-\"}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={state.user.newsletter}\r\n                color='primary'\r\n                name='newsletter'\r\n              />\r\n            }\r\n            label='Sign me up for Newsletter, to receive regular updates.'\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={state.user.acceptTerms}\r\n                required\r\n                color='primary'\r\n                name='acceptTerms'\r\n              />\r\n            }\r\n            label='I accept terms and conditions'\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    border: \"1px solid #ddd\",\r\n    marginBottom: theme.spacing(2),\r\n    textAlign: \"center\"\r\n  },\r\n  title: {\r\n    padding: theme.spacing(5, 0)\r\n  }\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const reload = () => {\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Typography variant='h5' className={classes.title}>\r\n        Congratulation! You completed registration process.\r\n      </Typography>\r\n      <Button variant='contained' color='primary' onClick={reload}>\r\n        Reload\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//MY MODULES\r\nimport EducationalInfo from \"./EducationalInfo\";\r\nimport PersonalInfo from \"./PersonalInfo\";\r\nimport AdditionalInfo from \"./AdditionalInfo\";\r\nimport FormComplete from \"./FormComplete\";\r\n\r\n//GENERAL\r\nimport { Box, Typography, Snackbar, SnackbarContent } from \"@material-ui/core\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\n//STEPPER\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\n//FORM\r\nimport Button from \"@material-ui/core/Button\";\r\n//CONTEXT\r\nimport { Form } from \"./Form\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: 0,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: theme.spacing(8, 12)\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      padding: theme.spacing(4, 6)\r\n    }\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    padding: theme.spacing(3, 0, 3, 5)\r\n  },\r\n  buttonsContainer: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst steps = [\"Personal Info\", \"Educational Info\", \"Additional Info\"];\r\n\r\n//MAIN COMPONENT\r\nexport default props => {\r\n  const [completed, setCompleted] = React.useState(false);\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [errors] = React.useState({});\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = useContext(Form);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const isStepOptional = step => {\r\n    return step === 1;\r\n  };\r\n  const handleCloseSnackbar = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (activeStep < steps.length - 1) handleNext();\r\n    else {\r\n      setCompleted(true);\r\n    }\r\n  };\r\n\r\n  const getStepContent = step => {\r\n    switch (step) {\r\n      case 0:\r\n        return <PersonalInfo />;\r\n      case 1:\r\n        return <EducationalInfo />;\r\n      case 2:\r\n        return <AdditionalInfo />;\r\n      default:\r\n        return \"Unknown step\";\r\n    }\r\n  };\r\n\r\n  const handleError = e => {\r\n    errors[e.target.name] = e.target.validationMessage;\r\n    setState({ ...state, errors: { ...errors } });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    //PASSWORD MATCHING\r\n    if (\r\n      e.target.name === \"confirmPassword\" &&\r\n      e.target.value !== state.user.password\r\n    ) {\r\n      e.target.setCustomValidity(\"Passwords are not matching\");\r\n    } else {\r\n      e.target.setCustomValidity(\"\");\r\n    }\r\n    if (e.target.name === \"password\") {\r\n      const confirm = e.target.form.querySelector(\r\n        \"input[name='confirmPassword']\"\r\n      );\r\n      // WHEN WE CHANGE PASSWORD, WE WANT TO VALIDATE CONFIRM PASSWORD AS WELL\r\n      if (e.target.value === state.user.confirmPassword) {\r\n        delete errors[confirm.name];\r\n        confirm.setCustomValidity(\"\");\r\n      } else {\r\n        confirm.setCustomValidity(\"Passwords are not matching\");\r\n        errors[confirm.name] = confirm.validationMessage;\r\n      }\r\n    }\r\n    if (e.target.validity.valid) {\r\n      //OTHER ELEMENTS\r\n      delete errors[e.target.name];\r\n    } else {\r\n      errors[e.target.name] = e.target.validationMessage;\r\n    }\r\n    const value =\r\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n    setState({\r\n      ...state,\r\n      user: { ...state.user, [e.target.name]: value },\r\n      errors: { ...errors }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!completed && (\r\n        <Box className={classes.root}>\r\n          <Stepper activeStep={activeStep} orientation='vertical'>\r\n            {steps.map((label, index) => {\r\n              const labelProps = {};\r\n              if (isStepOptional(index)) {\r\n                labelProps.optional = (\r\n                  <Typography variant='caption'>Optional</Typography>\r\n                );\r\n              }\r\n\r\n              return (\r\n                <Step key={index}>\r\n                  <StepLabel {...labelProps}>{label}</StepLabel>\r\n                  <StepContent>\r\n                    <form\r\n                      onSubmit={handleSubmit}\r\n                      onInvalid={handleError}\r\n                      onChange={handleChange}\r\n                      className={classes.content}\r\n                    >\r\n                      {getStepContent(activeStep)}\r\n                      <div className={classes.buttonsContainer}>\r\n                        <Button\r\n                          disabled={activeStep === 0}\r\n                          className={classes.button}\r\n                          variant='contained'\r\n                          onClick={handleBack}\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                        {activeStep < steps.length - 1 && (\r\n                          <Button\r\n                            type='submit'\r\n                            className={classes.button}\r\n                            variant='contained'\r\n                            color='primary'\r\n                          >\r\n                            Next\r\n                          </Button>\r\n                        )}\r\n                        {activeStep === steps.length - 1 && (\r\n                          <Button\r\n                            type='submit'\r\n                            className={classes.button}\r\n                            variant='contained'\r\n                            color='primary'\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </form>\r\n                  </StepContent>\r\n                </Step>\r\n              );\r\n            })}\r\n          </Stepper>\r\n        </Box>\r\n      )}\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        resumeHideDuration={3000}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        open={open}\r\n      >\r\n        <SnackbarContent\r\n          className={(classes.error, classes.error)}\r\n          message={\r\n            <span className={classes.message}>\r\n              <ErrorIcon className={classes.icon} />\r\n              {\"Please correct the data\"}\r\n            </span>\r\n          }\r\n        />\r\n      </Snackbar>\r\n      {completed && (\r\n        <Box className={(classes.root, classes.center)}>\r\n          <FormComplete />\r\n        </Box>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n//REGISTER FORM\nimport RegisterForm from \"./RegisterForm\";\n//HEADER\nimport Typography from \"@material-ui/core/Typography\";\n//CONTEXT\nimport FormProvider from \"./RegisterForm/Form\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: \"100vh\",\n    alignContent: \"stretch\",\n    [theme.breakpoints.down(\"sm\")]: {\n      alignContent: \"flex-start\"\n    }\n  },\n  header: {\n    padding: theme.spacing(5),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    [theme.breakpoints.down(\"sm\")]: {\n      flexGrow: 1\n    }\n  },\n  title: {\n    color: theme.palette.primary.contrastText,\n    marginBottom: theme.spacing(1)\n  },\n  subtitle: {\n    color: theme.palette.primary.light\n  },\n  toolbar: {\n    justifyContent: \"center\"\n  }\n}));\nfunction App() {\n  const classes = useStyles();\n  return (\n    <FormProvider>\n      <Grid container className={classes.root}>\n        <Grid item className={classes.header} xs={12} md={4}>\n          <Typography variant='h3' className={classes.title}>\n            Registration\n          </Typography>\n          <Typography variant='h5' className={classes.subtitle}>\n            Complete all 3 steps to finish registration process\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <RegisterForm />\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}